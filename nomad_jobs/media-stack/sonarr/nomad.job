job "sonarr" {
  region = var.region
  datacenters = ["dc1"]
  type        = "service"

  meta {
      job_file = "nomad_jobs/media-stack/sonarr/nomad.job"
version = "6"  // Incremented version number
  }

  constraint {
    attribute = "${meta.shared_mount}"
    operator  = "="
    value     = "true"
  }

  group "downloaders" {
    count = 1 
    network {
      port "http" {
        host_network = "tailscale"
        to = "8989"
      }
    }

    task "sonarr" {
      driver = "docker"
      config {
        image = "linuxserver/sonarr:4.0.15"
        ports = ["http"]
        volumes = [
          "${var.shared_dir}sonarr:/config",
          "${var.downloads_dir}:/downloads",
          "${var.tv_dir}:/media/TV",
          "local/config.xml:/config/config.xml",
        ]
      }

      env {
        PUID = "65534"
        PGID = "65534"
        TZ = "Etc/UTC"
      }

      template {
        data = <<EOH
<Config>
  <PostgresUser>postgres</PostgresUser>
  <PostgresPassword>${var.postgres_pass}</PostgresPassword>
  <PostgresPort>5432</PostgresPort>
  <PostgresHost>postgres.service.consul</PostgresHost>
  <PostgresMainDb>sonarr_main</PostgresMainDb>
  <PostgresLogDb>sonarr_logs</PostgresLogDb>
</Config>
EOH
        destination = "local/config.xml"
        perms = "644"
      }

      service {
        port = "http"
        name = "sonarr"
        tags = [
          "traefik.enable=true",
        ]
        check {
          type     = "http"
          path     = "/"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 1000
        memory = 256
      }
    }
  }
}

variable "region" {
    type = string
}

variable "tld" {
    type = string
}

variable "shared_dir" {
    type = string
}

variable "downloads_dir" {
    type = string
}

variable "tv_dir" {
    type = string
}

variable "postgres_pass" {
    type = string
    description = "Admin password for PostgreSQL"
}
